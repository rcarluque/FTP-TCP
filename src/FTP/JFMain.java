/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FTP;

import java.io.IOException;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.UIManager;

/**
 *
 * @author Rafa
 */
public class JFMain extends javax.swing.JFrame {
    private Controller ctr;

    /**
     * Creates new form JFMain
     */
    public JFMain() {
        initComponents();
        ctr = new Controller(this);
        this.setTitle("FTPcarmona");
        desactivaBotones();
        
        ctr.initJTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelConection = new javax.swing.JPanel();
        jLabelHost = new javax.swing.JLabel();
        jTextFieldHost = new javax.swing.JTextField();
        jTextFieldUser = new javax.swing.JTextField();
        jLabelUser = new javax.swing.JLabel();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jLabelPass = new javax.swing.JLabel();
        jButtonConectar = new javax.swing.JButton();
        jTextFieldPass = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTreeServer = new javax.swing.JTree();
        jButtonSubir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonDesconectar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonCrearDirectorio = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonDescargar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonBorrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelConection.setBorder(javax.swing.BorderFactory.createTitledBorder("Conexión"));

        jLabelHost.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabelHost.setText("Host:");

        jLabelUser.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabelUser.setText("Usuario:");

        jLabelPort.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabelPort.setText("Puerto:");

        jLabelPass.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabelPass.setText("Constraseña:");

        jButtonConectar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/connect.png"))); // NOI18N
        jButtonConectar.setText("Conectar");
        jButtonConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConectionLayout = new javax.swing.GroupLayout(jPanelConection);
        jPanelConection.setLayout(jPanelConectionLayout);
        jPanelConectionLayout.setHorizontalGroup(
            jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConectionLayout.createSequentialGroup()
                        .addComponent(jLabelUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConectionLayout.createSequentialGroup()
                        .addComponent(jLabelHost)
                        .addGap(33, 33, 33)
                        .addComponent(jTextFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelConectionLayout.createSequentialGroup()
                        .addComponent(jLabelPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConectionLayout.createSequentialGroup()
                        .addComponent(jLabelPass)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonConectar)
                .addContainerGap())
        );
        jPanelConectionLayout.setVerticalGroup(
            jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHost)
                    .addComponent(jTextFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPort)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUser)
                    .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPass)
                    .addComponent(jTextFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConectionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonConectar)
                .addContainerGap())
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("JTree");
        jTreeServer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(jTreeServer);

        jButtonSubir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/upload.png"))); // NOI18N
        jButtonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setText("Subir Archivo");

        jButtonDesconectar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/disconnect.png"))); // NOI18N
        jButtonDesconectar.setText("Desconectar");
        jButtonDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDesconectarActionPerformed(evt);
            }
        });

        jButtonSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit.png"))); // NOI18N
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonCrearDirectorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/folder.png"))); // NOI18N
        jButtonCrearDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearDirectorioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Crear Directorio");

        jButtonDescargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/download.png"))); // NOI18N
        jButtonDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescargarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setText("Descargar Archivo");

        jButtonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonDescargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel1))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonSubir, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonCrearDirectorio, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel2))
                                    .addComponent(jButtonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addComponent(jButtonDesconectar))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelConection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelConection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDesconectar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSubir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(23, 23, 23)
                                .addComponent(jButtonDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCrearDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConectarActionPerformed
        
        if(getServer().isEmpty()){
            JOptionPane.showMessageDialog(this, "Tienes que introducir un servidor al que conectar");
        }else if(getUser().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debes introducir un usuario de servidor");
        } else if(getPass().isEmpty()){
            JOptionPane.showMessageDialog(this, "Tienes que introducir la clave del servidor");
        } else if(getPort().isEmpty()){
            JOptionPane.showMessageDialog(this, "Introduce el puerto");
        } else{
            try {
                ctr.connect();
                activaBotones();
            }catch(SocketTimeoutException ste) {
                mesajeTiempo();     
            } catch (IOException ex) {
                ex.printStackTrace();
            }  
        }
        
        
    }//GEN-LAST:event_jButtonConectarActionPerformed

    private void jButtonDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDesconectarActionPerformed
        
        try {
            ctr.desLogear();
            desactivaBotones();
        }catch(SocketTimeoutException soc) {
            mesajeTiempo();      
        } catch (IOException ex) {
            ex.printStackTrace();
        }  
        
    }//GEN-LAST:event_jButtonDesconectarActionPerformed

    private void jButtonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirActionPerformed
        
        try {
            ctr.subirArchivo();
        }catch(SocketTimeoutException soc) {
            mesajeTiempo(); 
        }catch(SocketException se){
            mesajeTiempo2();    
            desactivaBotones();
        } catch (IOException ex) {
            ex.printStackTrace();
        }  
        
    }//GEN-LAST:event_jButtonSubirActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
       
        System.exit(0);
        
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonCrearDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearDirectorioActionPerformed
       
        String nombreCarpeta = JOptionPane.showInputDialog(this, "Introduce el nombre de la carpeta");
        if(nombreCarpeta != null){
            try {
                ctr.crearCarpeta(nombreCarpeta);
            }catch(SocketTimeoutException soc) {
                mesajeTiempo(); 
            }catch(SocketException se){
                     mesajeTiempo2();    
                     desactivaBotones();
            } catch (IOException ex) {
                ex.printStackTrace();
            } 
        }
        
    }//GEN-LAST:event_jButtonCrearDirectorioActionPerformed

    private void jButtonDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescargarActionPerformed

        if(jTreeServer.getSelectionCount() > 0){
            try {
                ctr.descargar();
            }catch(SocketTimeoutException soc) {
                mesajeTiempo(); 
            }catch(SocketException se){
                     mesajeTiempo2();    
                     desactivaBotones();
            } catch (IOException ex) {
                ex.printStackTrace();
            }  
        } else{
            JOptionPane.showMessageDialog(this, "Debes seleccionar almenos un archivo para descargar", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonDescargarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        
        if(jTreeServer.getSelectionCount() > 0){
            try {
                ctr.borrar();
            }catch(SocketTimeoutException soc) {
                mesajeTiempo(); 
            }catch(SocketException se){
                     mesajeTiempo2();    
                     desactivaBotones();
            } catch (IOException ex) {
                ex.printStackTrace();
            } 
        } else{
            JOptionPane.showMessageDialog(this, "Debes seleccionar almenos un archivo para borrar", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /** Seleccionamos el eslito (look and feel) del sistema del ordenador. */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFMain();
                frame.setVisible(true);
                frame.setExtendedState(JFrame.MAXIMIZED_BOTH); 
                frame.setVisible(true);             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonConectar;
    private javax.swing.JButton jButtonCrearDirectorio;
    private javax.swing.JButton jButtonDescargar;
    private javax.swing.JButton jButtonDesconectar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSubir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelHost;
    private javax.swing.JLabel jLabelPass;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanelConection;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldHost;
    private javax.swing.JPasswordField jTextFieldPass;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldUser;
    private javax.swing.JTree jTreeServer;
    // End of variables declaration//GEN-END:variables

    public String getServer(){
        return jTextFieldHost.getText();
    }
    
    public String getUser(){
        return jTextFieldUser.getText();
    }
      
    public String getPass(){
        return jTextFieldPass.getText();
    }
        
    public String getPort(){
        return jTextFieldPort.getText();
    }

    public JTree getjTreeServer() {
        return jTreeServer;
    }
    
    public void desactivaBotones(){       
        jButtonSubir.setEnabled(false);
        jButtonDesconectar.setEnabled(false);
        jButtonDescargar.setEnabled(false);
        jButtonCrearDirectorio.setEnabled(false);
        jButtonBorrar.setEnabled(false);
        jButtonConectar.setEnabled(true);
    }
    
    public void activaBotones(){
        jButtonSubir.setEnabled(true);
        jButtonDesconectar.setEnabled(true);
        jButtonDescargar.setEnabled(true);
        jButtonCrearDirectorio.setEnabled(true);
        jButtonBorrar.setEnabled(true);
        jButtonConectar.setEnabled(false);
    }

    public void falloConectar(){
        JOptionPane.showMessageDialog(this, "Algo ha fallado al conectarse al servidor", "Error al conectarse", JOptionPane.ERROR_MESSAGE);
    }
    
    public void falloLog(){
        JOptionPane.showMessageDialog(this, "Algo ha fallado al loguearse al servidor", "Error en Login", JOptionPane.ERROR_MESSAGE);
    }
    
    public void falloDirectorio(){
        JOptionPane.showMessageDialog(this, "Algo ha fallado al crear el directorio", "Error al crear", JOptionPane.ERROR_MESSAGE);
    }
    
    public void archivoDescargado(){
        JOptionPane.showMessageDialog(this, "El archivo se ha descargado correctamente");
    }
    
    public void seHaSubido(){
        JOptionPane.showMessageDialog(this, "El archivo se ha subido correctamente");
    }
    
    public void noSeHaSubido(){
        JOptionPane.showMessageDialog(this, "Fallo al cargar los datos", "Error en carga", JOptionPane.ERROR_MESSAGE);
    }
    
    public void logMensaje(){
        JOptionPane.showMessageDialog(this, "Te has conectado al servidor");
    }
    
    public void logoutMen(){
        JOptionPane.showMessageDialog(this, "Te has desconectado del servidor");
    } 

    public String deseaBorrar(){
        int res = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea borrar el archivo o directorio?", "Borrado", JOptionPane.YES_NO_OPTION);
        String siOno;
        if (res == JOptionPane.YES_OPTION) {
          siOno = "borra";
        } else {
           siOno = "no";
        }
        return siOno;
    }
    
    public void borradoBien(){
        JOptionPane.showMessageDialog(this, "El archivo se ha eliminado satisfactoriamente");
    } 
    
    public void borradoMal(){
        JOptionPane.showMessageDialog(this, "Algo ha fallado al borrar el archivo del servidor", "Error en borrado", JOptionPane.ERROR_MESSAGE);
    }
        
    public void archivoNoDescargado(){
        JOptionPane.showMessageDialog(this, "Algo ha fallado al descargar el archivo", "Error en descarga", JOptionPane.ERROR_MESSAGE);
    }
    
    public void mesajeTiempo() {
        JOptionPane.showMessageDialog(this, "Ha tardado demasiado tiempo, vuelve a intentar la acción", "Error con conexión", JOptionPane.ERROR_MESSAGE);
    }
    
    public void mesajeTiempo2() {
        JOptionPane.showMessageDialog(this, "Posiblemente lleves demasiado rato inactivo, vuelve a conectarte.", "Error con conexión", JOptionPane.ERROR_MESSAGE);
    }
    
}